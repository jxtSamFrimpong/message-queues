## ====================
# listeners.tcp.default = 5672
# listeners.tcp.local    = 127.0.0.1:5672
# listeners.tcp.local_v6 = ::1:5672
# listeners.tcp.other_port = 15673
# listeners.ssl.default = 5671
# listeners.tcp = none
# num_acceptors.tcp = 10
# num_acceptors.ssl = 10
# socket_writer.gc_threshold = 1000000000
# socket_writer.gc_threshold = off
# handshake_timeout = 10000
# reverse_dns_lookups = false
## ==============
# loopback_users.guest = true
# loopback_users.guest = false
# listeners.ssl.1                  = 5671
# ssl_options.verify               = verify_peer
# ssl_options.fail_if_no_peer_cert = false
# ssl_options.cacertfile           = /path/to/cacert.pem
# ssl_options.certfile             = /path/to/cert.pem
# ssl_options.keyfile              = /path/to/key.pem
# ssl_options.honor_cipher_order   = true
# ssl_options.honor_ecc_order      = true
# ssl_options.client_renegotiation = false
# ssl_options.secure_renegotiate   = true
# ssl_options.versions.1 = tlsv1.3
# ssl_options.versions.2 = tlsv1.2
# ssl_options.ciphers.1  = TLS_AES_256_GCM_SHA384
# ssl_options.ciphers.2  = TLS_AES_128_GCM_SHA256
# ssl_options.ciphers.3  = TLS_CHACHA20_POLY1305_SHA256
# ssl_options.ciphers.4  = TLS_AES_128_CCM_SHA256
# ssl_options.ciphers.5  = TLS_AES_128_CCM_8_SHA256
# ssl_options.ciphers.1  = ECDHE-ECDSA-AES256-GCM-SHA384
# ssl_options.ciphers.2  = ECDHE-RSA-AES256-GCM-SHA384
# ssl_options.ciphers.3  = ECDHE-ECDSA-AES256-SHA384
# ssl_options.ciphers.4  = ECDHE-RSA-AES256-SHA384
# ssl_options.ciphers.5  = ECDH-ECDSA-AES256-GCM-SHA384
# ssl_options.ciphers.6  = ECDH-RSA-AES256-GCM-SHA384
# ssl_options.ciphers.7  = ECDH-ECDSA-AES256-SHA384
# ssl_options.ciphers.8  = ECDH-RSA-AES256-SHA384
# ssl_options.ciphers.9  = DHE-RSA-AES256-GCM-SHA384
# ssl_options.ciphers.10 = DHE-DSS-AES256-GCM-SHA384
# ssl_options.ciphers.11 = DHE-RSA-AES256-SHA256
# ssl_options.ciphers.12 = DHE-DSS-AES256-SHA256
# ssl_options.ciphers.13 = ECDHE-ECDSA-AES128-GCM-SHA256
# ssl_options.ciphers.14 = ECDHE-RSA-AES128-GCM-SHA256
# ssl_options.ciphers.15 = ECDHE-ECDSA-AES128-SHA256
# ssl_options.ciphers.16 = ECDHE-RSA-AES128-SHA256
# ssl_options.ciphers.17 = ECDH-ECDSA-AES128-GCM-SHA256
# ssl_options.ciphers.18 = ECDH-RSA-AES128-GCM-SHA256
# ssl_options.ciphers.19 = ECDH-ECDSA-AES128-SHA256
# ssl_options.ciphers.20 = ECDH-RSA-AES128-SHA256
# ssl_options.ciphers.21 = DHE-RSA-AES128-GCM-SHA256
# ssl_options.ciphers.22 = DHE-DSS-AES128-GCM-SHA256
# ssl_options.ciphers.23 = DHE-RSA-AES128-SHA256
# ssl_options.ciphers.24 = DHE-DSS-AES128-SHA256
# ssl_options.ciphers.25 = ECDHE-ECDSA-AES256-SHA
# ssl_options.ciphers.26 = ECDHE-RSA-AES256-SHA
# ssl_options.ciphers.27 = DHE-RSA-AES256-SHA
# ssl_options.ciphers.28 = DHE-DSS-AES256-SHA
# ssl_options.ciphers.29 = ECDH-ECDSA-AES256-SHA
# ssl_options.ciphers.30 = ECDH-RSA-AES256-SHA
# ssl_options.ciphers.31 = ECDHE-ECDSA-AES128-SHA
# ssl_options.ciphers.32 = ECDHE-RSA-AES128-SHA
# ssl_options.ciphers.33 = DHE-RSA-AES128-SHA
# ssl_options.ciphers.34 = DHE-DSS-AES128-SHA
# ssl_options.ciphers.35 = ECDH-ECDSA-AES128-SHA
# ssl_options.ciphers.36 = ECDH-RSA-AES128-SHA
# ssl_options.bypass_pem_cache = true
# auth_backends.1   = rabbit_auth_backend_internal
# auth_backends.1.authn = rabbit_auth_backend_ldap
# auth_backends.1.authz = rabbit_auth_backend_internal
# auth_backends.1 = rabbit_auth_backend_ldap
# auth_backends.1 = rabbit_auth_backend_http
# auth_backends.1   = rabbit_auth_backend_http
# auth_backends.2   = rabbit_auth_backend_internal
# auth_mechanisms.1 = PLAIN
# auth_mechanisms.2 = AMQPLAIN
# auth_mechanisms.1 = PLAIN
# auth_mechanisms.2 = AMQPLAIN
# auth_mechanisms.3 = EXTERNAL
# auth_mechanisms.1 = EXTERNAL
# ssl_cert_login_from   = common_name
# ssl_handshake_timeout = 5000
## ====================
# load_definitions = /path/to/definitions/file.json
## ====================
# cluster_name = dev3.eng.megacorp.local
# password_hashing_module = rabbit_password_hashing_sha256
# password_hashing_module = rabbit_password_hashing_md5
## ====================
# default_vhost = /
# default_user = guest
# default_pass = guest
# default_permissions.configure = .*
# default_permissions.read = .*
# default_permissions.write = .*
# default_user_tags.administrator = true
# default_user_tags.management = true
# default_user_tags.custom_tag = true
# # =====================================================
# heartbeat = 60
# frame_max = 131072
# initial_frame_max = 4096
# channel_max = 128
# tcp_listen_options.backlog = 128
# tcp_listen_options.nodelay = true
# tcp_listen_options.exit_on_close = false
# tcp_listen_options.keepalive = true
# tcp_listen_options.send_timeout = 15000
# tcp_listen_options.buffer = 196608
# tcp_listen_options.sndbuf = 196608
# tcp_listen_options.recbuf = 196608
## ==============================
# vm_memory_high_watermark.relative = 0.4
# vm_memory_high_watermark.absolute = 1073741824
# vm_memory_high_watermark.absolute = 2GB
## as persistent (delivery mode = 2). With this combination queues will
# vm_memory_high_watermark_paging_ratio = 0.5
# vm_memory_calculation_strategy = rss
# memory_monitor_interval = 2500
# total_memory_available_override_value = 2GB
# disk_free_limit.absolute = 50000
# disk_free_limit.absolute = 500KB
# disk_free_limit.absolute = 50mb
# disk_free_limit.absolute = 5GB
# disk_free_limit.relative = 2.0
## =====================
# cluster_partition_handling = ignore
# cluster_partition_handling = pause_minority
# cluster_partition_handling = pause_if_all_down
# cluster_partition_handling.pause_if_all_down.recover = ignore
# cluster_partition_handling.pause_if_all_down.nodes.1 = rabbit@localhost
# cluster_partition_handling.pause_if_all_down.nodes.2 = hare@localhost
# mirroring_sync_batch_size = 4096
# cluster_formation.peer_discovery_backend     = rabbit_peer_discovery_classic_config
# cluster_formation.classic_config.nodes.1 = rabbit1@hostname
# cluster_formation.classic_config.nodes.2 = rabbit2@hostname
# cluster_formation.classic_config.nodes.3 = rabbit3@hostname
# cluster_formation.classic_config.nodes.4 = rabbit4@hostname
# cluster_formation.peer_discovery_backend = rabbit_peer_discovery_dns
# cluster_formation.dns.hostname = discovery.eng.example.local
# cluster_formation.node_type = disc
# cluster_keepalive_interval = 10000
## =====================
# collect_statistics_interval = 5000
## =====================
# raft.segment_max_entries = 65536
# raft.wal_max_size_bytes = 1048576
# raft.wal_max_batch_size = 4096
# raft.snapshot_chunk_size = 1000000
## =====================
# deprecated_features.permit.a_deprecated_feature = true
# deprecated_features.permit.another_deprecated_feature = false
# mnesia_table_loading_retry_timeout = 30000
# mnesia_table_loading_retry_limit = 10
# queue_index_embed_msgs_below = 4096
# queue_index_embed_msgs_below = 4kb
# background_gc_enabled = false
# background_gc_target_interval = 60000
# proxy_protocol = false
# product.name = RabbitMQ
# product.version = 1.2.3
# motd_file = /etc/rabbitmq/motd
# consumer_timeout = 900000
# ======================================
# ======================================
# net_ticktime = 60
# =======================================
# =======================================
# management.load_definitions = /path/to/exported/definitions.json
# management.http_log_dir = /path/to/access.log
# management.tcp.port = 15672
# management.tcp.ip   = 0.0.0.0
# management.tcp.shutdown_timeout   = 7000
# management.tcp.max_keepalive      = 120
# management.tcp.idle_timeout       = 120
# management.tcp.inactivity_timeout = 120
# management.tcp.request_timeout    = 120
# management.tcp.compress           = true
# management.ssl.port       = 15671
# management.ssl.cacertfile = /path/to/ca_certificate.pem
# management.ssl.certfile   = /path/to/server_certificate.pem
# management.ssl.keyfile    = /path/to/server_key.pem
# management.ssl.honor_cipher_order   = true
# management.ssl.honor_ecc_order      = true
# management.ssl.client_renegotiation = false
# management.ssl.secure_renegotiate   = true
# management.ssl.versions.1 = tlsv1.2
# management.ssl.ciphers.1 = ECDHE-ECDSA-AES256-GCM-SHA384
# management.ssl.ciphers.2 = ECDHE-RSA-AES256-GCM-SHA384
# management.ssl.ciphers.3 = ECDHE-ECDSA-AES256-SHA384
# management.ssl.ciphers.4 = ECDHE-RSA-AES256-SHA384
# management.ssl.ciphers.5 = ECDH-ECDSA-AES256-GCM-SHA384
# management.ssl.ciphers.6 = ECDH-RSA-AES256-GCM-SHA384
# management.ssl.ciphers.7 = ECDH-ECDSA-AES256-SHA384
# management.ssl.ciphers.8 = ECDH-RSA-AES256-SHA384
# management.ssl.ciphers.9 = DHE-RSA-AES256-GCM-SHA384
# management.path_prefix = /a-prefix
# management.rates_mode = basic
# management.sample_retention_policies.global.minute    = 5
# management.sample_retention_policies.global.hour  = 60
# management.sample_retention_policies.global.day = 1200
# management.sample_retention_policies.basic.minute   = 5
# management.sample_retention_policies.basic.hour = 60
# management.sample_retention_policies.detailed.10 = 5
# =======================================
# =======================================
# stomp.listeners.tcp.1 = 127.0.0.1:61613
# stomp.listeners.tcp.2 = ::1:61613
# stomp.tcp_listen_options.backlog   = 2048
# stomp.tcp_listen_options.recbuf    = 131072
# stomp.tcp_listen_options.sndbuf    = 131072
# stomp.tcp_listen_options.keepalive = true
# stomp.tcp_listen_options.nodelay   = true
# stomp.tcp_listen_options.exit_on_close = true
# stomp.tcp_listen_options.send_timeout  = 120000
# stomp.proxy_protocol = false
# stomp.listeners.ssl.default = 61614
# ssl_options.cacertfile = path/to/cacert.pem
# ssl_options.certfile   = path/to/cert.pem
# ssl_options.keyfile    = path/to/key.pem
# ssl_options.verify     =  verify_peer
# ssl_options.fail_if_no_peer_cert = true
# stomp.num_acceptors.tcp = 10
# stomp.num_acceptors.ssl = 1
# stomp.ssl_cert_login = true
# stomp.default_user = guest
# stomp.default_pass = guest
# stomp.implicit_connect = true
# stomp.proxy_protocol = false
# =======================================
# =======================================
# mqtt.listeners.tcp.1 = 127.0.0.1:61613
# mqtt.listeners.tcp.2 = ::1:61613
# mqtt.tcp_listen_options.backlog = 4096
# mqtt.tcp_listen_options.recbuf  = 131072
# mqtt.tcp_listen_options.sndbuf  = 131072
# mqtt.tcp_listen_options.keepalive = true
# mqtt.tcp_listen_options.nodelay   = true
# mqtt.tcp_listen_options.exit_on_close = true
# mqtt.tcp_listen_options.send_timeout  = 120000
# mqtt.listeners.ssl.default = 8883
# ssl_options.cacertfile = /path/to/tls/ca_certificate_bundle.pem
# ssl_options.certfile   = /path/to/tls/server_certificate.pem
# ssl_options.keyfile    = /path/to/tls/server_key.pem
# ssl_options.verify     = verify_peer
# ssl_options.fail_if_no_peer_cert  = true
# mqtt.num_acceptors.tcp = 10
# mqtt.num_acceptors.ssl = 10
# mqtt.proxy_protocol = false
# mqtt.default_user = guest
# mqtt.default_pass = guest
# mqtt.allow_anonymous = true
# mqtt.vhost = /
# mqtt.exchange = amq.topic
# mqtt.max_session_expiry_interval_secs = 1800
# mqtt.prefetch = 10
# mqtt.durable_queue_type = classic
# =======================================
# =======================================
# amqp1_0.default_user = guest
# amqp1_0.protocol_strict_mode = false
# log.dir = /var/log/rabbitmq
# log.file = rabbit.log
# log.file = false
# log.file.level = info
# log.file.rotation.date = $D0
# log.file.rotation.size = 0
# log.console = false
# log.console.level = info
# log.exchange = false
# log.exchange.level = info
# =======================================
# =======================================
## ================================
# auth_ldap.servers.1 = your-server-name-goes-here
# auth_ldap.servers.2 = your-other-server
# auth_ldap.use_ssl = false
# auth_ldap.port = 389
# auth_ldap.timeout = infinity
# auth_ldap.timeout = 500
# auth_ldap.log = false
# auth_ldap.log = true
# auth_ldap.log = network
## ==============
# auth_ldap.user_dn_pattern = cn=${username},ou=People,dc=example,dc=com
# auth_ldap.dn_lookup_attribute = userPrincipalName
# auth_ldap.dn_lookup_base      = DC=gopivotal,DC=com
# auth_ldap.other_bind = as_user
# auth_ldap.other_bind.user_dn  = User
# auth_ldap.other_bind.password = Password
## =============
##                       "ou=${vhost}-users,ou=vhosts,dc=example,dc=com"}},
